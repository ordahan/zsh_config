alias wzmv="noglob zmv -Wv"
function logify() {
    gawk '{ print strftime("%Y-%m-%dT%H:%M:%S"), $0; fflush(); }'
}
alias -g ...='../..'
alias -g ....='../../..'
alias -g .....='../../../..'
alias rmpyc='find . -type f -name "*.pyc" -print0 | xargs -0 rm'

function indent() {
  sed "s/^/   /"
}

srcgrep() {
    find . ! -path '*/.git/*' \
           ! -path '*myTrash*' \
           ! -path '*deps*' \
           \( -name '*.py' -or -name '*.c' -or -name '*.html' -or -name '*.json' \) \
           -type f -exec egrep -I --color=auto -H "$@" {} \;                                                            
}

srcgreped() {
    vim -p $(srcgrep "$@" | cut -f1 -d: | sort -u)
}

gentoken() {
    if [ -z "$1" ]; then
        local hexchars=12
    else
        local hexchars=$1
    fi
    dd if=/dev/urandom bs=32 count=1 2>/dev/null | md5sum | cut -c1-$hexchars | # generate random hex chars
        tr -d '\n' | # remove newline or cpcopy will copy the newline
        (( cpcopy ) 2>/dev/null || cut -c1- ) # if cpcopy exists, copy to clipboard, else use cut to revive the newline
    ( cppaste | cut -c1- ) 2> /dev/null || true # if cppaste exists, paste what you just copied, else do nothing
}

if [ -n "$_GOT_CLIPBOARD" ]; then
    alias -g cptee='cpcopy ; cppaste'
fi

function and_notify() {
  local message
  if [ "$1" = "-m" ]; then
    shift
    message="$1"
    shift
  fi
  if "$@"; then
    [ -z "$message" ] && message="$1 succeeded"
    local sound="~/.zsh.d/static/sounds/information.ogg"
  else
    [ -z "$message" ] && message="$1 failed"
    local sound="~/.zsh.d/static/sounds/error.ogg"
  fi
  ui-notify "$message"
  audio-play "$sound"
}
